version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ufobeep-api
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://localhost:6379/0}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - HUGGINGFACE_API_TOKEN=${HUGGINGFACE_API_TOKEN}
      - OPENSKY_CLIENT_ID=${OPENSKY_CLIENT_ID}
      - OPENSKY_CLIENT_SECRET=${OPENSKY_CLIENT_SECRET}
      - S3_ENDPOINT=${S3_ENDPOINT:-http://localhost:9000}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
      - S3_BUCKET=${S3_BUCKET:-ufobeep-media}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - MATRIX_BASE_URL=${MATRIX_BASE_URL}
      - MATRIX_SERVER_NAME=${MATRIX_SERVER_NAME}
      - MATRIX_ACCESS_TOKEN=${MATRIX_ACCESS_TOKEN}
      - MATRIX_BOT_USER_ID=${MATRIX_BOT_USER_ID}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
      - APNS_KEY_ID=${APNS_KEY_ID}
      - APNS_TEAM_ID=${APNS_TEAM_ID}
      - ENVIRONMENT=production
    depends_on:
      - redis
      - minio
    volumes:
      - ./api:/app
    network_mode: host
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ufobeep-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # MinIO Object Storage (S3 compatible)
  minio:
    image: minio/minio:latest
    container_name: ufobeep-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

volumes:
  redis_data:
  minio_data: